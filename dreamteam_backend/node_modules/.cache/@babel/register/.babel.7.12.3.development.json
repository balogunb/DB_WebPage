{
  "{\"sourceRoot\":\"/home/balogunb/DB_WebPage/dreamteam_backend/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/balogunb/DB_WebPage/dreamteam_backend\",\"filename\":\"/home/balogunb/DB_WebPage/dreamteam_backend/index.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/balogunb/DB_WebPage/dreamteam_backend\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/balogunb/DB_WebPage/dreamteam_backend/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/balogunb/DB_WebPage/dreamteam_backend",
      "filename": "/home/balogunb/DB_WebPage/dreamteam_backend/index.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/balogunb/DB_WebPage/dreamteam_backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/balogunb/DB_WebPage/dreamteam_backend/index.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/balogunb/DB_WebPage/dreamteam_backend/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/balogunb/DB_WebPage/dreamteam_backend/",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n// Entry Point of the API Server  \nvar express = require('express');\n/* Creates an Express application.  \n   The express() function is a top-level  \n   function exported by the express module. \n*/\n\n\nvar app = express();\n\nvar Pool = require('pg').Pool;\n\nvar path = __dirname + '/views/';\napp.use(express[\"static\"](path));\napp.get('/', function (req, res) {\n  res.sendFile(path + \"index.html\");\n});\nvar pool = new Pool({\n  user: \"balogunb\",\n  host: \"localhost\",\n  password: \"{Ofyers8\",\n  database: \"balogunb\",\n  port: \"5432\"\n});\n\nvar bodyParser = require('body-parser');\n\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({\n  extended: true\n}));\napp.use(function (req, res, next) {\n  res.header(\"Access-Control-Allow-Origin\", \"*\"); // update to match the domain you will make the request from\n\n  res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\n  next();\n});\npool.connect(function (err, client, release) {\n  if (err) {\n    return console.error('Error acquiring client', err.stack);\n  }\n\n  client.query('SELECT NOW()', function (err, result) {\n    release();\n\n    if (err) {\n      return console.error('Error executing query', err.stack);\n    }\n\n    console.log(\"Connected to Database !\");\n  });\n});\napp.get('/counties', function (req, res, next) {\n  var queryStr = \"\\n\\t\\tSELECT * FROM counties\";\n  pool.query(queryStr).then(function (data) {\n    console.log(data.rows);\n    res.send(data.rows);\n  });\n});\napp.get('/colleges', function (req, res, next) {\n  var queryStr = \"\\n\\t\\tSELECT * FROM colleges\";\n  pool.query(queryStr).then(function (data) {\n    console.log(data.rows);\n    res.send(data.rows);\n  });\n});\napp.get('/valleydata', function (req, res, next) {\n  var queryStr = \"\\n                select valley_cases.date, new_cases, sum from valley_cases JOIN (select date, sum(new_cases) OVER (ORDER BY date ASC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) FROM valley_cases) AS valley_cumulative ON valley_cases.date = valley_cumulative.date;\";\n  pool.query(queryStr).then(function (data) {\n    console.log(data.rows);\n    res.send(data.rows);\n  });\n});\napp.get('/allcountydata', function (req, res, next) {\n  var queryStr = \"\\n\\t\\tSELECT * FROM county_weekly_cases order by date desc\";\n  pool.query(queryStr).then(function (data) {\n    console.log(data.rows);\n    res.send(data.rows);\n  });\n});\napp.get('/countycolleges', function (req, res, next) {\n  var county_name = req.query.county_name;\n  console.log(county_name);\n  var queryStr = \"\\n        SELECT * FROM colleges where county_name =$1\";\n  pool.query(queryStr, [county_name]).then(function (data) {\n    console.log(data.rows);\n    res.send(data.rows);\n  });\n});\napp.get('/countydata', function (req, res, next) {\n  var county_name = req.query.county_name;\n  console.log(county_name);\n  var queryStr = \"\\n\\t\\tSELECT * FROM county_weekly_cases where county_name =$1 order by date asc\";\n  pool.query(queryStr, [county_name]).then(function (data) {\n    console.log(data.rows);\n    res.send(data.rows);\n  });\n});\napp.get('/collegedata', function (req, res, next) {\n  var college_name = req.query.college_name;\n  var queryStr = \"\\n\\t\\tSELECT * FROM college_weekly_cases where college_name =$1 order by date asc\";\n  pool.query(queryStr, [college_name]).then(function (data) {\n    console.log(data.rows);\n    res.send(data.rows);\n  });\n});\nvar server = app.listen(80, '139.147.9.191', function () {\n  console.log(\"Server running on port 80\");\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "express",
        "require",
        "app",
        "Pool",
        "path",
        "__dirname",
        "use",
        "get",
        "req",
        "res",
        "sendFile",
        "pool",
        "user",
        "host",
        "password",
        "database",
        "port",
        "bodyParser",
        "json",
        "urlencoded",
        "extended",
        "next",
        "header",
        "connect",
        "err",
        "client",
        "release",
        "console",
        "error",
        "stack",
        "query",
        "result",
        "log",
        "queryStr",
        "then",
        "data",
        "rows",
        "send",
        "county_name",
        "college_name",
        "server",
        "listen"
      ],
      "mappings": "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",
      "sourceRoot": "/home/balogunb/DB_WebPage/dreamteam_backend/",
      "sourcesContent": [
        "// Entry Point of the API Server  \n  \nconst express = require('express'); \n  \n/* Creates an Express application.  \n   The express() function is a top-level  \n   function exported by the express module. \n*/\nconst app = express(); \nconst Pool = require('pg').Pool; \nconst path = __dirname + '/views/';\n\napp.use(express.static(path));\n\napp.get('/', function (req,res){\n  res.sendFile(path + \"index.html\");\n});\n\nconst pool = new Pool({\n\tuser: \"balogunb\",\n\thost: \"localhost\",\n\tpassword: \"{Ofyers8\",\n\tdatabase: \"balogunb\",\n\tport: \"5432\"\n});\n\n\nconst bodyParser = require('body-parser'); \napp.use(bodyParser.json()) \napp.use(bodyParser.urlencoded({ extended: true }));\n\napp.use(function(req, res, next) {\n  res.header(\"Access-Control-Allow-Origin\", \"*\"); // update to match the domain you will make the request from\n  res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\n  next();\n});\n\n\n\npool.connect((err, client, release) => { \n    if (err) { \n        return console.error( \n            'Error acquiring client', err.stack) \n    } \n    client.query('SELECT NOW()', (err, result) => { \n        release() \n        if (err) { \n            return console.error( \n                'Error executing query', err.stack) \n        } \n        console.log(\"Connected to Database !\") \n    }) \n}) \n  \n\n\napp.get('/counties', (req, res, next) => { \n\n    let queryStr = `\n\t\tSELECT * FROM counties`\n    pool.query(queryStr) \n        .then(data => { \n            console.log(data.rows); \n            res.send(data.rows); \n        }) \n})\n\n\napp.get('/colleges', (req, res, next) => {  \n\n    let queryStr = `\n\t\tSELECT * FROM colleges`\n    pool.query(queryStr) \n        .then(data => { \n            console.log(data.rows); \n            res.send(data.rows); \n        }) \n})\n\n\napp.get('/valleydata', (req, res, next) => { \n\n    let queryStr = `\n                select valley_cases.date, new_cases, sum from valley_cases JOIN (select date, sum(new_cases) OVER (ORDER BY date ASC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) FROM valley_cases) AS valley_cumulative ON valley_cases.date = valley_cumulative.date;`  \n    pool.query(queryStr) \n        .then(data => { \n            console.log(data.rows); \n            res.send(data.rows); \n        }) \n})\n\n\n\n\n\napp.get('/allcountydata', (req, res, next) => { \n\n    let queryStr = `\n\t\tSELECT * FROM county_weekly_cases order by date desc`  \n    pool.query(queryStr) \n        .then(data => { \n            console.log(data.rows); \n            res.send(data.rows); \n        }) \n})\n\n\napp.get('/countycolleges', (req, res, next) => { \n    const county_name = req.query.county_name\n    console.log(county_name)\n\n    let queryStr = `\n        SELECT * FROM colleges where county_name =$1`  \n    pool.query(queryStr,[county_name]) \n        .then(data => { \n            console.log(data.rows); \n            res.send(data.rows); \n        }) \n})\n\n\napp.get('/countydata', (req, res, next) => { \n    const county_name = req.query.county_name\n    console.log(county_name)\n\n    let queryStr = `\n\t\tSELECT * FROM county_weekly_cases where county_name =$1 order by date asc`  \n    pool.query(queryStr,[county_name]) \n        .then(data => { \n            console.log(data.rows); \n            res.send(data.rows); \n        }) \n})\n\n\n\napp.get('/collegedata', (req, res, next) => { \n    const college_name = req.query.college_name\n\n    let queryStr = `\n\t\tSELECT * FROM college_weekly_cases where college_name =$1 order by date asc`  \n    pool.query(queryStr,[college_name]) \n        .then(data => { \n            console.log(data.rows); \n            res.send(data.rows); \n        }) \n})\n\n\n\n\n\nconst server = app.listen(80, '139.147.9.191',() => {\n console.log(\"Server running on port 80\");\n}); \n"
      ]
    },
    "sourceType": "script",
    "mtime": 1606145401280
  }
}